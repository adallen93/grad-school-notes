geom_text(aes(x = 2, y = 49), label = "Coefficients:", family = "serif", col = "firebrick") ,
geom_text(aes(x =  3.3, y = 47), label = "Estimate Std. Error t value Pr(>|t|) ", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3.1, y = 45), label = "(Intercept)  37.2851     1.8776  19.858  < 2e-16 ***", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3.2, y = 43), label = "wt           -5.3445     0.5591  -9.559 1.29e-10 ***", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3, y = 39), label = "Residual standard error: 3.046 on 30 degrees of freedom", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3, y = 37), label = "Multiple R-squared:  0.7528,	Adjusted R-squared:  0.7446", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3, y = 35), label = "F-statistic: 91.38 on 1 and 30 DF,  p-value: 1.294e-10", family = "serif", col = "firebrick") )
# Chunk 3
# Read in data
dat <- read.csv("mtcars.csv")
here()
setwd(here())
getwd()
View(mtcars)
read.csv("mtcars.csv")
getwd()
here()
setwd("U:/austin_allen/documents/grad-school-notes/courses/current_courses/b705/b705_homework/b705_hw_1")
getwd()
# Chunk 1
library(tidyverse)
library(plotly)
library(knitr)
library(here)
library(pander)
setwd(here())
knitr::opts_chunk$set(fig.align = 'center', fig.height = 4, fig.width = 5, echo = TRUE, warning = FALSE, message = FALSE)
my_theme = theme(plot.title = element_text(hjust = .5, face = "bold", size = 13.5),
text = element_text(family = "serif"),
panel.grid = element_blank())
# Chunk 2
# This code chunk is to get rid of a lot of code that isn't very readable by saving all the text for labels in my plots in lists to be added to the plots downstream
labels_a <- list(geom_text(aes(x = .5, y = 44), label = "lm(formula = mpg ~ x, data = dat)", family = "serif", col = "firebrick"),
geom_text(aes(x = .25, y = 42), label = "Coefficients:", family = "serif", col = "firebrick"),
geom_text(aes(x = .5, y = 40), label = "Estimate Std. Error t value Pr(>|t|) ", family = "serif", col = "firebrick"),
geom_text(aes(x = .46, y = 38), label = "(Intercept)   24.513      1.021  24.009  < 2e-16 ***", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 36), label = "x             -8.844      1.444  -6.125 9.84e-07 ***", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 32), label = "Residual standard error: 4.084 on 30 degrees of freedom", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 30), label = "Multiple R-squared:  0.5557,	Adjusted R-squared:  0.5408 ", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 28), label = "F-statistic: 37.52 on 1 and 30 DF,  p-value: 9.837e-07", family = "serif", col = "firebrick") )
labels_d <- list(geom_text(aes(x = 3.3, y = 51), label = "lm(formula = mpg ~ wt, data = dat)", family = "serif", col = "firebrick"),
geom_text(aes(x = 2, y = 49), label = "Coefficients:", family = "serif", col = "firebrick") ,
geom_text(aes(x =  3.3, y = 47), label = "Estimate Std. Error t value Pr(>|t|) ", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3.1, y = 45), label = "(Intercept)  37.2851     1.8776  19.858  < 2e-16 ***", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3.2, y = 43), label = "wt           -5.3445     0.5591  -9.559 1.29e-10 ***", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3, y = 39), label = "Residual standard error: 3.046 on 30 degrees of freedom", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3, y = 37), label = "Multiple R-squared:  0.7528,	Adjusted R-squared:  0.7446", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3, y = 35), label = "F-statistic: 91.38 on 1 and 30 DF,  p-value: 1.294e-10", family = "serif", col = "firebrick") )
# Chunk 3
# Read in data
dat <- read.csv("mtcars.csv")
setwd("U:/austin_allen/documents/grad-school-notes/courses/current_courses/b705/b705_homework/b705_hw_1")
# Read in data
dat <- read.csv("mtcars.csv")
# Read in data
dat <- read.csv("mtcars.csv")
# Create indicator variable X
dat$x <- as.numeric(dat$wt > median(dat$wt))
# Create model
model_a <- lm(mpg ~ x, data = dat)
# Create a plot
ggplot(dat) +
geom_point(aes(x = x, y = mpg), size = 1.2, col = "skyblue") +
geom_smooth(aes(x = x, y = mpg), method = "lm", se = FALSE, col = "firebrick", lwd = .5) +
labs(x = "Weight > Median Weight (3,325 lbs)", y = "Miles per Gallon", title = "Looking at MPG Above and Below Median Weight") +
scale_x_continuous(breaks = c(0, 1)) +
theme_bw() +
labels_a +
my_theme
# Create model
model_e <- lm(mpg ~ x + hp + x*hp, data = dat)
# Print summary of model
summary(model_e)
# Create model
model_f <- lm(mpg ~ wt + hp + wt*hp, data = dat)
# Print summary of model
summary(model_f)
# Print summary of model
summary(model_e)
# Load the data
dat <- read.csv("parents_offspring.csv")
# Load the data
dat <- read.csv("parents_offsprings.csv")
View(dat)
# Create a scatterplot
ggplot(dat) +
geom_point(aes(x = midparent_height, y = offspring_height), col = "skyblue", size = .8) +
geom_smooth(method = "lm", aes(x = midparent_height, y = offspring_height), col = "firebrick", lwd = .75) +
theme_bw() +
my_theme
# Create a scatterplot
ggplot(dat) +
geom_point(aes(x = midparent_height, y = offspring_height), col = "skyblue", size = .8) +
geom_smooth(method = "lm", aes(x = midparent_height, y = offspring_height), col = "firebrick", lwd = .75, se = FALSE) +
theme_bw() +
my_theme
# Create a scatterplot
ggplot(dat) +
geom_point(aes(x = midparent_height, y = offspring_height), col = "skyblue", size = .8) +
geom_smooth(method = "lm", aes(x = midparent_height, y = offspring_height), col = "firebrick", lwd = .75, se = FALSE) +
labs(x = "Mid-parent Height", y = "Offspring Height", y = "Scatterplot showing Mid-parent Height vs Offspring Height") +
theme_bw() +
my_theme
# Create a scatterplot
ggplot(dat) +
geom_point(aes(x = midparent_height, y = offspring_height), col = "skyblue", size = .8) +
geom_smooth(method = "lm", aes(x = midparent_height, y = offspring_height), col = "firebrick", lwd = .75, se = FALSE) +
labs(x = "Mid-parent Height", y = "Offspring Height", title = "Scatterplot showing Mid-parent Height vs Offspring Height") +
theme_bw() +
my_theme
?parent_offspring
View(dat)
# Create model
model_c <- lm(offspring_height ~ midparent_height, data = dat)
# Pring model summary
summary(model_c)
# Pring model summary
summary(model_c)
# Set variables
sse <- sum( (dat$offspring_height - mean(dar$offspring_height))^2 )
# Set variables
sse <- sum( (dat$offspring_height - mean(dat$offspring_height))^2 )
sse
sse/(nrow(dat) - 1)
sse/(nrow(dat) - 2)
sd(dat$midparent_height)
sqrt(6.3)
sd(dat$offspring_height)
# Set variables
n <- nrow(dat)
sse <- sum( (dat$offspring_height - mean(dat$offspring_height))^2 )
s_squared_x <- ( sd(dat$midparent_height) )^2
# Calculate point estimate for the standard error
se_bh1 <- sqrt( sse/( (n - 2) * s_squared_x ) )
se_bh1
summary(model_f)
summary(model_c)
# Set variables
n <- nrow(dat)
sse <- sum( (dat$offspring_height - model_c$fitted.values)^2 )
s_squared_x <- ( sd(dat$midparent_height) )^2
# Calculate point estimate for the standard error
se_bh1 <- sqrt( sse/( (n - 2) * s_squared_x ) )
be_bh1
se_bh1
sse
2.239^2
5.013121 * 926
sse
n
s_squared_x
sd(dat$midparent_height)
1.78^2
sum(model_c$residuals^2)
thing <- (n - 2) * ((sd(dat$midparent_height))^2)
thing
sse/thing
sqrt(1.568633)
se_bh1
# Calculate point estimate for the standard error
se_bh1 <- sqrt( sse/( (n - 2)  ) )
se_bh1
# Calculate point estimate for the standard error
se_bh1 <- sqrt( sse/( (n - 2) (s_squared_x^2) ) )
# Calculate point estimate for the standard error
se_bh1 <- sqrt( sse/( (n - 2) *(s_squared_x^2) ) )
s_squared_x
se_bh1
# Calculate point estimate for the standard error
se_bh1 <- sqrt( sse/( (n - 2) *(s_squared_x) ) )
se_bh1
summary(model_c)
?qt
qt(c(.05/2, 1-.05/2), (n - 2))
model_c$xlevels
model_c$qr$tol
# Set variables
bh1 <- 0.64629 # from summary output
t <-  qt(c(.05/2, 1-.05/2), (n - 2)) # desired range
se <- 0.04114 # from summary output
confint <- bh1 + t * se
confint
confint(model_c, parm = "midparent_height", level = .95)
confint
?predict
predict(model_c, newdata = data.frame(midparent_heigh = 68), interval = "prediction")
predict(model_c, newdata = data.frame(midparent_height = 68), interval = "prediction")
23.942 + 0.646 * 68
# Calculate predicted height
predicted_height <- 23.942 + 0.646 * 68
predicted_height
summary(model_c)
mse <- 2.239^2
mse
n
mean(dat$midparent_height)
sd(dat$midparent_height)
sd(dat$midparent_height)^2
sum( (dat$midparent_height - mean(dat$midparent_height))^2 )
5.01 * (1/928 + ((68 - mean(dat$midparent_height))^2)/(sum( (dat$midparent_height - mean(dat$midparent_height))^2 )))
(1/928 + ((68 - mean(dat$midparent_height))^2)/(sum( (dat$midparent_height - mean(dat$midparent_height))^2 )))
(1/928 + ((68 - mean(dat$midparent_height))^2)/(sum( (dat$midparent_height - mean(dat$midparent_height))^2 ))) * (sd(dat$midparent_height)^2)
(1/928 + ((68 - mean(dat$midparent_height))^2)/(sum( (dat$midparent_height - mean(dat$midparent_height))^2 ))) *2.239^2
5.01 * (1/928 + ((72 - mean(dat$midparent_height))^2)/(sum( (dat$midparent_height - mean(dat$midparent_height))^2 )))
summary(model_c)
sum( (dat$midparent_height - mean(dat$midparent_height))^2)
s_squared_x <- ( sd(dat$midparent_height) )^2
s_squared_x
# Set variables
n <- nrow(dat)
sse <- sum( (dat$offspring_height - model_c$fitted.values)^2 )
#s_squared_x <- ( sd(dat$midparent_height) )^2
s_squared_x <- sum( (dat$midparent_height - mean(dat$midparent_height))^2)
# Calculate point estimate for the standard error
se_bh1 <- sqrt( sse/( (n - 2) *(s_squared_x) ) )
se_bh1
23.94 + .65*68
23.942 + 0.646*68
68.14 - 67.87
sum( (dat$midparent_height - mean(dat$midparent_height))^2 )
# Load in the data
dat <- read.csv("corn_yield_and_rainfall.csv")
View(dat)
# Create a scatterplot
ggplot(dat) +
geom_point(aes(x = Rainfall, y = Yield), col = "skyblue", size = .8) +
geom_smooth(method = "lm", aes(x = Rainfall, y = Yield), col = "firebrick", lwd = .75, se = FALSE) +
labs(x = "Mid-parent Height", y = "Offspring Height", title = "Scatterplot showing Mid-parent Height vs Offspring Height") +
theme_bw() +
my_theme
mylm <- lm(Yield~ Rainfall, data = dat)
plot(mylm, which = 1:2)
# Create a scatterplot
ggplot(dat) +
geom_point(aes(x = Rainfall, y = Yield), col = "skyblue", size = .8) +
geom_smooth(method = "lm", aes(x = Rainfall, y = Yield), col = "firebrick", lwd = .75, se = FALSE) +
labs(x = "Mid-parent Height", y = "Offspring Height", title = "Scatterplot of Corn Yield and Rainfall Data") +
theme_bw() +
my_theme
library(car)
boxCox(mylm)
df <- data.frame(x = c(1,2,3,4,5,6,7,8,9,10), y = c(1,4,9,16,25,36,49,64,81,100))
df
quadlm <- lm(x ~ y, data = df)
boxCox(quadlm)
# Create a scatterplot
ggplot(dat) +
geom_point(aes(x = Rainfall, y = Yield), col = "skyblue", size = .8) +
geom_smooth(method = "lm", aes(x = Rainfall, y = Yield), col = "firebrick", lwd = .75, se = FALSE) +
labs(x = "Rainfall (inches/year)", y = "Corn Yield (bushels/acre)", title = "Scatterplot of Corn Yield and Rainfall Data") +
theme_bw() +
my_theme
# Print summary
summary(model_b)
# Create model
model_b <- lm(Yield~ Rainfall, data = dat)
# Print summary
summary(model_b)
model_b
predict(model_b, newdata = data.frame(Rainfall = 14), interval = "confidence")
print(prediction)
# Calculate confidence interval
prediction <- predict(model_b, newdata = data.frame(Rainfall = 14), interval = "confidence")
print(prediction)
# Calculate confidence interval
prediction <- predict(model_b, newdata = data.frame(Rainfall = 14), interval = "prediction")
print(prediction)
42.9-25.9
summary(model_b)
# Load in the data
dat <- read.csv("BodyTemperature.csv")
View(dat)
# Create model
model_a <- lm(Temperature ~ HeartRate, data = dat)
summary(model_a)
nrow(dat)
# Create model
model_c <- lm(offspring_height ~ midparent_height, data = dat)
# Pring model summary
summary(model_c)
# Pring model summary
summary(model_a)
# Define variables
bh1 <- 0.64629 # from summary output
t <- qt(c(.05/2, 1 - .05/2), df = nrow(dat) - 1)
se <- 0.016 # from summary output
confint <- bh1 + t * se
confint
# Define variables
bh1 <- 0.08063 # from summary output
t <- qt(c(.05/2, 1 - .05/2), df = nrow(dat) - 1)
se <- 0.016 # from summary output
confint <- bh1 + t * se
confint
dat
sum((model_a$residuals)^2)
sse <- sum((model_a$residuals)^2)
sst <- sum( (dat$Temperature - mean(dat$Temperature))^2)
sst
1 - 72.48/90.65
summary(model_a)
nrow(dat)
(sse)
(sse*98)/(90.65*sst)
1 - (sse*98)/(90.65*sst)
sst
1 - (sse*98)/(sst*99)
confint
1 - sse/sst
1 - (sse*98)/(sst*99)
# Read in data
dat <- read.csv("mtcars.csv")
# Create indicator variable X
dat$x <- as.numeric(dat$wt > median(dat$wt))
# Create model
model_a <- lm(mpg ~ x, data = dat)
# Create a plot
ggplot(dat) +
geom_point(aes(x = x, y = mpg), size = 1.2, col = "skyblue") +
geom_smooth(aes(x = x, y = mpg), method = "lm", se = FALSE, col = "firebrick", lwd = .5) +
labs(x = "Weight > Median Weight (3,325 lbs)", y = "Miles per Gallon", title = "Looking at MPG Above and Below Median Weight") +
scale_x_continuous(breaks = c(0, 1)) +
theme_bw() +
labels_a +
my_theme
summary(lm(mpg ~ wt + hp + wt*hp, data = dat))
# Load in the data
dat <- read.csv("BodyTemperature.csv")
# Create model
model_a <- lm(Temperature ~ HeartRate, data = dat)
1 - sqrt((sse*98)/(sst*99))
sqrt(1 - (sse*98)/(sst*99))
summary(model_c)
summary(model_a)
1 - sse/sst
1 - (sse*98)/(sst*99)
1 - (sse*99)/(sst*98)
92.29 + 0.0806*75
predict(model_a, newdata = data.frame(HeartRate = 75), interval = "prediction")
# Add sex to model
model_f <- lm(Temperature ~ HeartRate + Sex, data = dat)
# Add sex to model
model_f <- lm(Temperature ~ HeartRate + Sex, data = dat)
# Print summary of new model
summary(model_f)
summary(model_a)
summary(model_f)
.2093 - .1923
# Load the data
dat <- read.csv("parents_offsprings.csv")
# Create a scatterplot
ggplot(dat) +
geom_point(aes(x = midparent_height, y = offspring_height), col = "skyblue", size = .8) +
geom_smooth(method = "lm", aes(x = midparent_height, y = offspring_height), col = "firebrick", lwd = .75, se = FALSE) +
labs(x = "Mid-parent Height", y = "Offspring Height", title = "Scatterplot showing Mid-parent Height vs Offspring Height") +
theme_bw() +
my_theme
dat
mean(dat$midparent_height)
sum( (dat$midparent_height - mean(dat$midparent_height))^2 )
summary(model_a)
summary(model_g)
# Add sex to model
model_g <- lm(Temperature ~ HeartRate + Sex + HeartRate*, data = dat)
# Chunk 1
library(tidyverse)
library(plotly)
library(knitr)
library(here)
library(pander)
setwd(here())
knitr::opts_chunk$set(fig.align = 'center', fig.height = 4, fig.width = 5, echo = TRUE, warning = FALSE, message = FALSE)
my_theme = theme(plot.title = element_text(hjust = .5, face = "bold", size = 13.5),
text = element_text(family = "serif"),
panel.grid = element_blank())
# Chunk 2
# This code chunk is to get rid of a lot of code that isn't very readable by saving all the text for labels in my plots in lists to be added to the plots downstream
labels_a <- list(geom_text(aes(x = .5, y = 44), label = "lm(formula = mpg ~ x, data = dat)", family = "serif", col = "firebrick"),
geom_text(aes(x = .25, y = 42), label = "Coefficients:", family = "serif", col = "firebrick"),
geom_text(aes(x = .5, y = 40), label = "Estimate Std. Error t value Pr(>|t|) ", family = "serif", col = "firebrick"),
geom_text(aes(x = .46, y = 38), label = "(Intercept)   24.513      1.021  24.009  < 2e-16 ***", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 36), label = "x             -8.844      1.444  -6.125 9.84e-07 ***", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 32), label = "Residual standard error: 4.084 on 30 degrees of freedom", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 30), label = "Multiple R-squared:  0.5557,	Adjusted R-squared:  0.5408 ", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 28), label = "F-statistic: 37.52 on 1 and 30 DF,  p-value: 9.837e-07", family = "serif", col = "firebrick") )
labels_d <- list(geom_text(aes(x = 3.3, y = 51), label = "lm(formula = mpg ~ wt, data = dat)", family = "serif", col = "firebrick"),
geom_text(aes(x = 2, y = 49), label = "Coefficients:", family = "serif", col = "firebrick") ,
geom_text(aes(x =  3.3, y = 47), label = "Estimate Std. Error t value Pr(>|t|) ", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3.1, y = 45), label = "(Intercept)  37.2851     1.8776  19.858  < 2e-16 ***", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3.2, y = 43), label = "wt           -5.3445     0.5591  -9.559 1.29e-10 ***", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3, y = 39), label = "Residual standard error: 3.046 on 30 degrees of freedom", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3, y = 37), label = "Multiple R-squared:  0.7528,	Adjusted R-squared:  0.7446", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3, y = 35), label = "F-statistic: 91.38 on 1 and 30 DF,  p-value: 1.294e-10", family = "serif", col = "firebrick") )
# Chunk 3
# Read in data
dat <- read.csv("mtcars.csv")
setwd("U:/austin_allen/documents/grad-school-notes/courses/current_courses/b705/b705_homework/b705_hw_1")
# Chunk 1
library(tidyverse)
library(plotly)
library(knitr)
library(here)
library(pander)
setwd(here())
knitr::opts_chunk$set(fig.align = 'center', fig.height = 4, fig.width = 5, echo = TRUE, warning = FALSE, message = FALSE)
my_theme = theme(plot.title = element_text(hjust = .5, face = "bold", size = 13.5),
text = element_text(family = "serif"),
panel.grid = element_blank())
# Chunk 2
# This code chunk is to get rid of a lot of code that isn't very readable by saving all the text for labels in my plots in lists to be added to the plots downstream
labels_a <- list(geom_text(aes(x = .5, y = 44), label = "lm(formula = mpg ~ x, data = dat)", family = "serif", col = "firebrick"),
geom_text(aes(x = .25, y = 42), label = "Coefficients:", family = "serif", col = "firebrick"),
geom_text(aes(x = .5, y = 40), label = "Estimate Std. Error t value Pr(>|t|) ", family = "serif", col = "firebrick"),
geom_text(aes(x = .46, y = 38), label = "(Intercept)   24.513      1.021  24.009  < 2e-16 ***", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 36), label = "x             -8.844      1.444  -6.125 9.84e-07 ***", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 32), label = "Residual standard error: 4.084 on 30 degrees of freedom", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 30), label = "Multiple R-squared:  0.5557,	Adjusted R-squared:  0.5408 ", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 28), label = "F-statistic: 37.52 on 1 and 30 DF,  p-value: 9.837e-07", family = "serif", col = "firebrick") )
labels_d <- list(geom_text(aes(x = 3.3, y = 51), label = "lm(formula = mpg ~ wt, data = dat)", family = "serif", col = "firebrick"),
geom_text(aes(x = 2, y = 49), label = "Coefficients:", family = "serif", col = "firebrick") ,
geom_text(aes(x =  3.3, y = 47), label = "Estimate Std. Error t value Pr(>|t|) ", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3.1, y = 45), label = "(Intercept)  37.2851     1.8776  19.858  < 2e-16 ***", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3.2, y = 43), label = "wt           -5.3445     0.5591  -9.559 1.29e-10 ***", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3, y = 39), label = "Residual standard error: 3.046 on 30 degrees of freedom", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3, y = 37), label = "Multiple R-squared:  0.7528,	Adjusted R-squared:  0.7446", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3, y = 35), label = "F-statistic: 91.38 on 1 and 30 DF,  p-value: 1.294e-10", family = "serif", col = "firebrick") )
# Chunk 3
# Read in data
dat <- read.csv("mtcars.csv")
# Add sex to model
model_g <- lm(Temperature ~ HeartRate + Sex + HeartRate*, data = dat)
# Add sex to model
model_g <- lm(Temperature ~ HeartRate + Sex + HeartRate*Sex, data = dat)
# Load in the data
dat <- read.csv("BodyTemperature.csv")
getwd()
setwd("U:/austin_allen/documents/grad-school-notes/courses/current_courses/b705/b705_homework/b705_hw_1")
getwd()
ls
ls(getwd())
?ls
# Chunk 1
library(tidyverse)
library(plotly)
library(knitr)
library(here)
library(pander)
setwd(here())
knitr::opts_chunk$set(fig.align = 'center', fig.height = 4, fig.width = 5, echo = TRUE, warning = FALSE, message = FALSE)
my_theme = theme(plot.title = element_text(hjust = .5, face = "bold", size = 13.5),
text = element_text(family = "serif"),
panel.grid = element_blank())
# Chunk 2
# This code chunk is to get rid of a lot of code that isn't very readable by saving all the text for labels in my plots in lists to be added to the plots downstream
labels_a <- list(geom_text(aes(x = .5, y = 44), label = "lm(formula = mpg ~ x, data = dat)", family = "serif", col = "firebrick"),
geom_text(aes(x = .25, y = 42), label = "Coefficients:", family = "serif", col = "firebrick"),
geom_text(aes(x = .5, y = 40), label = "Estimate Std. Error t value Pr(>|t|) ", family = "serif", col = "firebrick"),
geom_text(aes(x = .46, y = 38), label = "(Intercept)   24.513      1.021  24.009  < 2e-16 ***", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 36), label = "x             -8.844      1.444  -6.125 9.84e-07 ***", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 32), label = "Residual standard error: 4.084 on 30 degrees of freedom", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 30), label = "Multiple R-squared:  0.5557,	Adjusted R-squared:  0.5408 ", family = "serif", col = "firebrick"),
geom_text(aes(x = .48, y = 28), label = "F-statistic: 37.52 on 1 and 30 DF,  p-value: 9.837e-07", family = "serif", col = "firebrick") )
labels_d <- list(geom_text(aes(x = 3.3, y = 51), label = "lm(formula = mpg ~ wt, data = dat)", family = "serif", col = "firebrick"),
geom_text(aes(x = 2, y = 49), label = "Coefficients:", family = "serif", col = "firebrick") ,
geom_text(aes(x =  3.3, y = 47), label = "Estimate Std. Error t value Pr(>|t|) ", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3.1, y = 45), label = "(Intercept)  37.2851     1.8776  19.858  < 2e-16 ***", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3.2, y = 43), label = "wt           -5.3445     0.5591  -9.559 1.29e-10 ***", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3, y = 39), label = "Residual standard error: 3.046 on 30 degrees of freedom", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3, y = 37), label = "Multiple R-squared:  0.7528,	Adjusted R-squared:  0.7446", family = "serif", col = "firebrick") ,
geom_text(aes(x = 3, y = 35), label = "F-statistic: 91.38 on 1 and 30 DF,  p-value: 1.294e-10", family = "serif", col = "firebrick") )
# Chunk 3
# Read in data
dat <- read.csv("mtcars.csv")
dat <- read.csv("BodyTemperature.csv")
# Load in the data
dat <- read.csv("BodyTemperature.csv")
# Load in the data
dat <- read.csv("BodyTemperature.csv")
setwd("U:/austin_allen/documents/grad-school-notes/courses/current_courses/b705/b705_homework/b705_hw_1")
getwd()
# Load in the data
dat <- read.csv("BodyTemperature.csv")
# Add sex to model
model_g <- lm(Temperature ~ HeartRate + Sex + HeartRate*Sex, data = dat)
# Print summary of new model
summary(model_f)
# Add sex to model
model_f <- lm(Temperature ~ HeartRate + Sex, data = dat)
# Print summary of new model
summary(model_f)
# Add sex to model
model_g <- lm(Temperature ~ HeartRate + Sex + HeartRate*Sex, data = dat)
# Print summary of new model
summary(model_f)
# Add sex to model
model_g <- lm(Temperature ~ HeartRate + Sex + HeartRate*Sex, data = dat)
# Print summary of new model
summary(model_g)
# Add sex to model
model_g <- lm(Temperature ~ HeartRate + Sex + HeartRate*Sex, data = dat)
# Print summary of new model
summary(model_g)
dat <- read.csv("mtcars.csv")
# Create model
model_e <- lm(mpg ~ x + hp + x*hp, data = dat)
# Print summary of model
summary(model_e)
11.5-0.05
# Create model
model_f <- lm(mpg ~ wt + hp + wt*hp, data = dat)
# Print summary of model
summary(model_f)
