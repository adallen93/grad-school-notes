new_variable_names <- read.csv("new_variable_names.csv")[-1] %>%
filter(new_variable_name != "")
dat %>%
rename_with(~ new_variable_names$new_variable_name[match(., new_variable_names$current_variable_name)], everything())
dat %>%
rename_with(~ new_variable_names$new_variable_name[match(., new_variable_names$current_variable_name)], everything()) %>%
select(sort(samp)) %>%
View()
# Read in all returned variable replacement assignments (finished)
# kiki <- read.csv("variable_assignments/kiki.csv")[-1]
# dorene <- read.csv("variable_assignments/dorene.csv")[-1]
qianyu <- read.csv("variable_assignments/qianyu.csv")[-1]
View(qianyu)
# Read in all returned variable replacement assignments (finished)
# kiki <- read.csv("variable_assignments/kiki.csv")[-1]
# dorene <- read.csv("variable_assignments/dorene.csv")[-1]
qianyu <- read.csv("variable_assignments/qianyu.csv")[-1] %>%
mutate(new_variable_name = ifelse(new_variable_name == "", current_variable_name, new_variable_name))
View(qianyu)
# Perform basic cleaning to get all names uniform (finished)
new_variable_names <- rbind(kiki, dorene, qianyu, tianyi, austin) %>%
filter(new_variable_name != "") %>%
mutate(new_variable_name = str_to_lower(new_variable_name)) %>%
select(-description)
# Perform basic cleaning to get all names uniform (finished)
new_variable_names <- rbind(kiki, dorene, qianyu, tianyi, austin)
View(kiki)
# Read in all returned variable replacement assignments (finished)
# kiki <- read.csv("variable_assignments/kiki.csv")[-1]
# dorene <- read.csv("variable_assignments/dorene.csv")[-1]
qianyu <- read.csv("variable_assignments/qianyu.csv")[-1] %>%
mutate(new_variable_name = ifelse(new_variable_name == "", current_variable_name, new_variable_name)) %>%
rename(description = NOTEs)
new_variable_names <- rbind(kiki, dorene, qianyu, tianyi, austin)
filter(new_variable_name != "") %>%
mutate(new_variable_name = str_to_lower(new_variable_name)) %>%
select(-description)
# Perform basic cleaning to get all names uniform (finished)
new_variable_names <- rbind(kiki, dorene, qianyu, tianyi, austin) %>%
filter(new_variable_name != "") %>%
mutate(new_variable_name = str_to_lower(new_variable_name)) %>%
select(-description)
View(new_variable_names)
# Save a copy
write.csv(new_variable_names, "new_variable_names.csv")
# Load in new variable names
new_variable_names <- read.csv("new_variable_names.csv")[-1]
dat %>%
rename_with(~ new_variable_names$new_variable_name[match(., new_variable_names$current_variable_name)], everything()) %>%
select(sort(samp)) %>%
View()
dat %>%
rename_with(~ new_variable_names$new_variable_name[match(., new_variable_names$current_variable_name)], everything())
View(new_variable_names %>% filter(new_variable_name == starts_with("M")))
View(new_variable_names %>% filter(new_variable_name starts_with("M")))
View(new_variable_names %>% filter(starts_with(new_variable_name, "M")))
?starts_with
View(new_variable_name %>% filter(str_detect(new_variable_name, "biomarker_urine")))
ncol(dat)
nrow(new_variable_names)
# Load in data
dat <- read.csv("MIDUS_combined_reduced.csv") %>%
filter(!is.na(MIDUS2), # Deselect individuals not in MIDUS2
!is.na(MIDUS3)) # Deselect individuals not in MIDUS3
ncol(dat)
dat %>%
rename_with(~ new_variable_names$new_variable_name[match(., new_variable_names$current_variable_name)], everything())
# Perform basic cleaning to get all names uniform (finished)
new_variable_names <- rbind(kiki, dorene, qianyu, tianyi, austin) %>%
filter(new_variable_name != "") %>%
mutate(new_variable_name = str_to_lower(new_variable_name)) %>%
select(-description) %>%
mutate(new_variable_name = str_replace_all(new_variable_name, " ", "_"))
# Save a copy
write.csv(new_variable_names, "new_variable_names.csv")
# Load in data
dat <- read.csv("MIDUS_combined_reduced.csv") %>%
filter(!is.na(MIDUS2), # Deselect individuals not in MIDUS2
!is.na(MIDUS3)) # Deselect individuals not in MIDUS3
# Load in new variable names
new_variable_names <- read.csv("new_variable_names.csv")[-1]
dat %>%
rename_with(~ new_variable_names$new_variable_name[match(., new_variable_names$current_variable_name)], everything())
rlang::last_trace()
dat %>%
rename_with(~ new_variable_names$new_variable_name[match(., new_variable_names$current_variable_name)], everything())
dat[c(47,178,87,215,91,219,92,220,94,221)]
View(dat[c(47,178,87,215,91,219,92,220,94,221)])
d <- read.csv("NIDUS_combined_redued.csv")
d <- read.csv("MIDUS_combined_redued.csv")
d <- read.csv("MIDUS_combined_reduced.csv")
View(d)
d[c(1,3,100,254)]
d[c(1,3,200,254)]
View(d[c(1,3,200,254)])
colnames(dat)
# Load in new variable names
new_variable_names <- read.csv("new_variable_names.csv")[-1] %>%
mutate(new_variable_name = ifelse(~starts_with("B"), "test1", "test2"))
View(new_variable_names)
# Load in new variable names
new_variable_names <- read.csv("new_variable_names.csv")[-1] %>%
mutate(new_variable_name = case_when(str_detect(current_variable, '^B') ~ past0("M3_", new_variable_name),
str_detect(current_variable, '^C') ~ past0("M2_", new_variable_name),
TRUE ~ new_variable_name)) %>%
View()
# Load in new variable names
new_variable_names <- read.csv("new_variable_names.csv")[-1] %>%
mutate(new_variable_name = case_when(str_detect(current_variable, '^B') ~ past0("M3_", new_variable_name),
str_detect(current_variable, '^C') ~ past0("M2_", new_variable_name),
TRUE ~ new_variable_name))
View(new_variable_names)
# Load in new variable names
new_variable_names <- read.csv("new_variable_names.csv")[-1]
new_variable_names %>%
mutate(new_variable_name = case_when(str_detect(current_variable, '^B') ~ past0("M3_", new_variable_name),
str_detect(current_variable, '^C') ~ past0("M2_", new_variable_name),
TRUE ~ new_variable_name))
new_variable_names %>%
mutate(new_variable_name = case_when(str_detect(new_variable_names$current_variable, '^B') ~ past0("M3_", new_variable_name),
str_detect(new_variable_names$current_variable, '^C') ~ past0("M2_", new_variable_name),
TRUE ~ new_variable_name))
new_variable_names %>%
mutate(new_variable_name = case_when(str_detect(new_variable_names$current_variable, '^B') ~ paste0("M3_", new_variable_name),
str_detect(new_variable_names$current_variable, '^C') ~ paste0("M2_", new_variable_name),
TRUE ~ new_variable_name))
new_variable_names %>%
mutate(new_variable_name = case_when(str_detect(new_variable_names$current_variable, '^B') ~ paste0("M3_", new_variable_name),
str_detect(new_variable_names$current_variable, '^C') ~ paste0("M2_", new_variable_name),
TRUE ~ new_variable_name)) %>% View()
# Load in new variable names
new_variable_names <- read.csv("new_variable_names.csv")[-1]  %>%
mutate(new_variable_name = case_when(str_detect(new_variable_names$current_variable, '^B') ~ paste0("M3_", new_variable_name),
str_detect(new_variable_names$current_variable, '^C') ~ paste0("M2_", new_variable_name),
TRUE ~ new_variable_name))
dat %>%
rename_with(~ new_variable_names$new_variable_name[match(., new_variable_names$current_variable_name)], everything())
new_dat <- dat %>%
rename_with(~ new_variable_names$new_variable_name[match(., new_variable_names$current_variable_name)], everything())
View(new_dat)
news <- colnames <- colnames(new_dat)
newx
news
sum(str_detect(new, "M2"))
sum(news[str_detect(new, "M2")])
rlang::last_trace()
sum(new)
sum(news)
news[1]
news[c(TRUE, TRUE, FALSE)]
?str_detect
str_detect(news, "M2")
sum(str_detect(news, "M2"))
sum(str_detect(news, "M3"))
new_names_vector <- colnames <- colnames(new_dat)
m2_count <- sum(str_detect(news, "M2"))
m3_cound <- sum(str_detect(news, "M3"))
m2_count
m3_count
m3_cound <- sum(str_detect(news, "M3"))
m3_count
m3_count <- sum(str_detect(news, "M3"))
m3_count
m3_count + m2_count
which(!str_detect(news, "M2"))
which(!str_detect(news, "M[2,3]"))
# how many are in M2 and M3?
m2_count <- sum(str_detect(new_names_vector, "M2"))
m3_count <- sum(str_detect(new_names_vector, "M3"))
# What columns are neither?
other_colnames <- new_names_vector[which(!str_detect(new_names_vector, "M[2,3]"))]
other_colnames
clean_dat <- dat %>%
rename_with(~ new_variable_names$new_variable_name[match(., new_variable_names$current_variable_name)], everything())
new_names_vector <- colnames <- colnames(clean_dat)
renamed_dat <- dat %>%
rename_with(~ new_variable_names$new_variable_name[match(., new_variable_names$current_variable_name)], everything())
new_names_vector <- colnames <- colnames(renamed_dat)
new_names_vector
m2_count
other_colnames
dat %>% select(samplmaj) %>% View()
dat %>% select(samplmaj)
dat %>% select(SAMPLMAJ) %>% View()
library(tidyverse)
library(knitr)
library(pander)
opts_chunk$set(warning = FALSE, message = FALSE, fig.align = 'center', fig.width = 4, fig.height = 3)
strengths <- read.csv("strengths.csv") %>%
select(!(10:38))
setwd("U:/austin_allen/documents/grad-school-notes/courses/current_courses/b802")
strengths <- read.csv("strengths.csv") %>%
select(!(10:38))
categories <- read.csv("categories.csv")
strengths %>%
pivot_longer(cols = starts_with("strength"), names_to = "rank", values_to = "strength") %>%
unite(cols = first_name:last_name, sep = " ")
categories <- read.csv("categories.csv")
View(strengths)
View(categories)
.Machine$integer.max
x <- 2147483647
y <- x + 1
y
rm(list=ls())
ls()
?ls
Title| |
