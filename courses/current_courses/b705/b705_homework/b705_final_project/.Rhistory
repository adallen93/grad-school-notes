library(tidyverse)
library(knitr)
setwd("U:/austin_allen/documents/grad-school-notes/courses/current_courses/b705/b705_homework/b705_final_project")
# Load in data
readxl::read_xlsx("data_dictionary_water.xlsx")
# Load in data
data_dictionary <- readxl::read_xlsx("data_dictionary_water.xlsx")
# Load in data and dictionary
dat <- read.csv("water_potability_A.csv")
View(dat)
View(data_dictionary)
# Chunk 1
# Load libraries and set global options
library(tidyverse)
library(knitr)
opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE, fig.align = 'center', fig.width = 4, fig.height = 3)
outcome <- data_dictionary %>% filter(Variable == "pH")
# Load in data and dictionary
dat <- read.csv("water_potability_A.csv")
data_dictionary <- readxl::read_xlsx("data_dictionary_water.xlsx")
setwd("U:/austin_allen/documents/grad-school-notes/courses/current_courses/b705/b705_homework/b705_final_project")
outcome <- data_dictionary %>% filter(Variable == "pH")
outcome
View(outcome)
outcome <- data_dictionary %>% filter(Variable == "pH Value")
View(outcome)
outcome <- data_dictionary %>% filter(Variable == "pH value")
outcome %>%
pivot_longer(cols = 1:2, names_to = test, values_to = test_2)
outcome %>%
pivot_longer(cols = 1:2, names_to = "test", values_to = "test_2")
kable(outcome)
pander::pander(outcome)
covariates <- data_dictionary %>% filter(Variable != "pH value")
pander::pander(covariates)
# Chunk 1
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE, fig.align = 'center', fig.width = 4, fig.height = 3)
# Chunk 2
# Load libraries and set global options
library(tidyverse)
# Chunk 3
# Load in data and dictionary
dat <- read.csv("water_potability_A.csv")
data_dictionary <- readxl::read_xlsx("data_dictionary_water.xlsx")
# Chunk 4
outcome <- data_dictionary %>% filter(Variable == "pH value")
pander::pander(outcome)
# Chunk 5
covariates <- data_dictionary %>% filter(Variable != "pH value")
pander::pander(covariates)
names(dat)
get_summary_table <- function(var) {
summary(mosaic::favstats(dat[,var], na.rm = FALSE))
}
sum_tables <- lapply(colnames(dat), get_summary_table)
library(gridExtra)
get_summary_table <- function(var) {
summary(mosaic::favstats(dat[,var], na.rm = FALSE))
}
sum_tables <- lapply(colnames(dat), get_summary_table)
grid_arrangement <- arrangeGrob(
grobs = laply(sum_tables, tableGrob),
ncol = 4, nrow = 3
)
get_summary_table <- function(var) {
summary(mosaic::favstats(dat[,var], na.rm = FALSE))
}
sum_tables <- lapply(colnames(dat), get_summary_table)
grid_arrangement <- arrangeGrob(
grobs = lapply(sum_tables, tableGrob),
ncol = 4, nrow = 3
)
grid.newpage()
